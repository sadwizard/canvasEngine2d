{"version":3,"file":"group.js","sourceRoot":"","sources":["group.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,eAAe,CAAC;AAEnC,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAgB,MAAM,SAAS,CAAC;AAU9C;IAA2B,yBAAK;IAM5B,eAAY,MAAoB;QAAhC,iBAUC;;gBATG,kBAAM;YACF,IAAI,EAAE,WAAW,CAAC,KAAK;YACvB,OAAO,EAAE,MAAM,CAAC,OAAO;SAC1B,CAAC;QAEF,KAAI,CAAC,QAAQ,GAAG,MAAA,MAAM,CAAC,QAAQ,mCAAI,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpD,KAAI,CAAC,KAAK,GAAG,MAAA,MAAM,CAAC,KAAK,mCAAI,CAAC,CAAC;QAC/B,KAAI,CAAC,MAAM,GAAG,MAAA,MAAM,CAAC,MAAM,mCAAI,CAAC,CAAC;QACjC,KAAI,CAAC,QAAQ,GAAG,MAAA,MAAM,CAAC,QAAQ,mCAAI,EAAE,CAAC;;IAC1C,CAAC;IAED,mBAAG,GAAH;QAAA,iBAMC;QANG,cAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,yBAAkB;;QAClB,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;YACd,IAAI,IAAI,YAAY,KAAK,EAAE;gBACvB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0BAAU,GAAV,UAAW,EAAU;QACjB,IAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,EAAE,KAAK,EAAE,EAAd,CAAc,CAAC,CAAC;QACxE,OAAO,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,sBAAM,GAAN,UAAO,MAAe;QAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAc;YACjC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IACL,YAAC;AAAD,CAAC,AApCD,CAA2B,KAAK,GAoC/B","sourcesContent":["import Vector from '#/core/vector';\nimport { TDrawer } from '#/core/render';\nimport { SHAPE_TYPES } from '#/constants';\nimport { Piece, TPieceParams } from './piece';\nimport { TShapes } from './shapes/index';\n\nexport type TGroupParams = {\n    position?: Vector;\n    width: number;\n    height: number;\n    children?: TShapes[];\n} & TPieceParams;\n\nexport class Group extends Piece {\n    position: Vector;\n    children: TShapes[];\n\twidth: number;\n\theight: number;\n\n    constructor(params: TGroupParams) {\n        super({\n            type: SHAPE_TYPES.GROUP,\n            visible: params.visible,\n        });\n\n        this.position = params.position ?? new Vector(0, 0);\n        this.width = params.width ?? 0;\n        this.height = params.height ?? 0;\n        this.children = params.children ?? [];\n    }\n\n    add(...args: TShapes[]) {\n        args.forEach((item) => {\n            if (item instanceof Piece) {\n                this.children.push(item);\n            }\n        });\n    }\n\n    removeBody(id: string) {\n        const index: number = this.children.findIndex((item) => item.id === id);\n        return delete this.children[index];\n    }\n\n    render(drawer: TDrawer) {\n        this.children.forEach((child: TShapes) => {\n            child.render(drawer);\n        });\n    }\n}\n"]}