{"version":3,"file":"rafPolifil.js","sourceRoot":"","sources":["rafPolifil.ts"],"names":[],"mappings":"AAAA;;GAEG;AASD;;;GAGG;AACH,IAAM,SAAS,GAGX;IACF,qBAAqB,EAAE,cAAM,OAAA,CAAC,EAAD,CAAC;IAC9B,oBAAoB,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS;CACtC,CAAA;AAED;;GAEG;AACH,IAAI,MAAM,EAAE;IACV,IAAM,OAAO,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;IAC5C,IAAM,KAAG,GAAG,MAAyB,CAAA;IAErC,SAAS,CAAC,qBAAqB,GAAG,OAAO;SACtC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,KAAG,CAAC,MAAM,GAAG,uBAAuB,CAAC,EAArC,CAAqC,CAAC;SACpD,MAAM,CACL,UAAC,WAAW,EAAE,IAAI,IAAK,OAAA,WAAW,IAAI,IAAI,EAAnB,CAAmB,EAC1C,MAAM,CAAC,qBAAqB,CAC7B,CAAA;IAEH,SAAS,CAAC,oBAAoB,GAAG,OAAO;SACrC,GAAG,CACF,UAAA,MAAM;QACJ,OAAA,KAAG,CAAC,MAAM,GAAG,sBAAsB,CAAC;YACpC,KAAG,CAAC,MAAM,GAAG,6BAA6B,CAAC;IAD3C,CAC2C,CAC9C;SACA,MAAM,CACL,UAAC,WAAW,EAAE,IAAI,IAAK,OAAA,WAAW,IAAI,IAAI,EAAnB,CAAmB,EAC1C,MAAM,CAAC,oBAAoB,CAC5B,CAAA;CACJ;AAED;;GAEG;AACH,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE;IACpC,IAAI,UAAQ,GAAG,CAAC,CAAA;IAChB,SAAS,CAAC,qBAAqB,GAAG,UAAA,QAAQ;QACxC,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;QACrC,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,GAAG,UAAQ,CAAC,CAAC,CAAA;QAC1D,IAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;YAC3B,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAA;QACjC,CAAC,EAAE,UAAU,CAAC,CAAA;QACd,UAAQ,GAAG,QAAQ,GAAG,UAAU,CAAA;QAChC,OAAO,EAAE,CAAA;IACX,CAAC,CAAA;IAED,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE;QACnC,SAAS,CAAC,oBAAoB,GAAG,UAAA,EAAE;YACjC,YAAY,CAAC,EAAE,CAAC,CAAA;QAClB,CAAC,CAAA;KACF;CACF;AAED,MAAM,CAAC,IAAM,qBAAqB,GAAG,SAAS,CAAC,qBAAqB,CAAA;AAEpE,MAAM,CAAC,IAAM,oBAAoB,GAAG,SAAS,CAAC,oBAAoB,CAAA","sourcesContent":["/*\n * Resolve requestAnimationFrame and cancelAnimationFrame regardless of whether window exists.\n */\n\n/*\n * make window type index-able\n */\ninterface IndexableWindow {\n    [key: string]: any\n  }\n  \n  /*\n   * Create an object to store the requestAnimationFrame and cancelAnimationFrame functions so it doesn't interfere\n   * with functions declared in the global space.\n   */\n  const animation: {\n    requestAnimationFrame(callback: FrameRequestCallback): number\n    cancelAnimationFrame(id: number): void\n  } = {\n    requestAnimationFrame: () => 0,\n    cancelAnimationFrame: () => undefined,\n  }\n  \n  /*\n   * Look for browser specific implementations of the requestAnimationFrame, and cancelAnimationFrame functions\n   */\n  if (window) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n    const win = window as IndexableWindow\n  \n    animation.requestAnimationFrame = vendors\n      .map(vendor => win[vendor + 'RequestAnimationFrame'])\n      .reduce(\n        (accumulator, func) => accumulator || func,\n        window.requestAnimationFrame,\n      )\n  \n    animation.cancelAnimationFrame = vendors\n      .map(\n        vendor =>\n          win[vendor + 'CancelAnimationFrame'] ||\n          win[vendor + 'CancelRequestAnimationFrame'],\n      )\n      .reduce(\n        (accumulator, func) => accumulator || func,\n        window.cancelAnimationFrame,\n      )\n  }\n  \n  /*\n   * Fallback to setTimeout logic if no existing alternatives can be found\n   */\n  if (!animation.requestAnimationFrame) {\n    let lastTime = 0\n    animation.requestAnimationFrame = callback => {\n      const currTime = new Date().getTime()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall)\n      }, timeToCall)\n      lastTime = currTime + timeToCall\n      return id\n    }\n  \n    if (!animation.cancelAnimationFrame) {\n      animation.cancelAnimationFrame = id => {\n        clearTimeout(id)\n      }\n    }\n  }\n  \n  export const requestAnimationFrame = animation.requestAnimationFrame\n  \n  export const cancelAnimationFrame = animation.cancelAnimationFrame"]}